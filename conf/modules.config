/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: SEQTK_SEQ_CONTIG_FILTER {
        ext.args = { "-L ${params.min_contig_length}" }
    }


    withName: BARRNAP {
        ext.kingdom = "bac,arc,mito,euk"
        ext.args = "--quiet"
        publishDir = [
            path: { "${params.outdir}/barrnap" },
            mode: params.publish_dir_mode,
            pattern: "*.gff"
        ]
    }

    withName: MINIMAP2_INDEX {
        ext.args = '-x map-ont'
        publishDir = [
            path: { "${params.outdir}/minimap2/index/bacterial" },
            mode: params.publish_dir_mode,
            pattern: '*.mmi'
        ]
    }

    withName: MINIMAP2_ALIGN {
        publishDir = [
            path: { "${params.outdir}/minimap2/align/bacterial" },
            mode: params.publish_dir_mode,
            pattern: "*.bam"
        ]
    }


    withName: SEMIBIN_SINGLEEASYBIN {
        ext.args = '--sequencing-type long_read --environment human_gut'
        ext.args3 = '--no-write-pre-reclustering-bins'
        publishDir = [
            path: { "${params.outdir}/semibin/singleeasybin/${meta.id}/" },
            mode: params.publish_dir_mode
        ]
    }


    withName: SEQKIT_GREP_NON_BACTERIAL {
        ext.args = '-v'
        publishDir = [
            path: { "${params.outdir}/seqkit/grep/${meta.id}_non_bacterial" },
            mode: params.publish_dir_mode
        ]
    }

    withName: SEQKIT_GREP_BACTERIAL {
        publishDir = [
            path: { "${params.outdir}/seqkit/grep/${meta.id}_bacterial" },
            mode: params.publish_dir_mode
        ]
    }


    withName: SEQKIT_GREP_NON_PLASMID {
        ext.args = '-v'
        ext.prefix = { "${meta.id}_filtered" }
        publishDir = [
            path: { "${params.outdir}/seqkit/grep/${meta.id}_non_plasmid" },
            mode: params.publish_dir_mode
        ]
    }

    withName: SEQKIT_GREP_PLASMID {
        ext.prefix = { "${meta.id}_filtered" }
        publishDir = [
            path: { "${params.outdir}/seqkit/grep/${meta.id}_plasmid" },
            mode: params.publish_dir_mode
        ]
    }

    withName: GENOMAD_DOWNLOAD {
        publishDir = [
                path: { "${params.outdir}/genomad/" },
                mode: params.publish_dir_mode,
                pattern: 'genomad_db'
            ]
     }

    withName: GENOMAD_CONSERVATIVE {
        ext.args = [
            "--cleanup", "--conservative"
        ].join(' ').trim()
        publishDir = [
                path: { "${params.outdir}/genomad/conservative/${meta.id}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
     }

    withName: GENOMAD_DEFAULT {
        ext.args = ext.args = [
            "--cleanup", "--max-fdr 0.5"
        ].join(' ').trim()
        publishDir = [
                path: { "${params.outdir}/genomad/default/${meta.id}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
     }

    withName: MINIMAP2_EUKARYOTIC_VIRUS {
        ext.args = '-x asm20'
        publishDir = [
            path: { "${params.outdir}/minimap2/index/eukaryotic_virus" },
            mode: params.publish_dir_mode,
            pattern: '*.mmi'
        ]
    }

    withName: MINIMAP2_ALIGN_EUKARYOTIC_VIRUS {
       publishDir = [
            path: { "${params.outdir}/minimap2/align/eukaryotic_virus" },
            mode: params.publish_dir_mode,
            pattern: "*.paf"
        ]
    }

    withName: PAFTOOLS_SAM2PAF {
        publishDir = [
            path: { "${params.outdir}/minimap2/align/eukaryotic_virus" },
            mode: params.publish_dir_mode,
            pattern: "*.paf"
        ]
    }

    withName: MSAMTOOLS_FILTER  {
       publishDir = [
            path: { "${params.outdir}/msamtools/filter" },
            mode: params.publish_dir_mode,
            pattern: "*.bam"
        ]
    }

    withName: SAMTOOLS_VIEW {
        ext.args = '-f 4'
        ext.prefix = { "${meta.id}.unmapped" }
         publishDir = [
                path: { "${params.outdir}/samtools/eukaryotic_viral_unmapped" },
                mode: params.publish_dir_mode,
            ]
    }

    withName: SAMTOOLS_VIEW_MAPPED {
        ext.args = '-F 4'
        ext.prefix = { "${meta.id}.mapped" }
         publishDir = [
                path: { "${params.outdir}/samtools/eukaryotic_viral_mapped" },
                mode: params.publish_dir_mode,
            ]
    }

    withName: MINIMAP2_FUNGI {
        ext.args = '-x asm20'
        publishDir = [
            path: { "${params.outdir}/minimap2/index/fungi" },
            mode: params.publish_dir_mode,
            pattern: '*.mmi'
        ]
    }

    withName: MINIMAP2_ALIGN_FUNGI {
       ext.args = '-x asm20'
       publishDir = [
            path: { "${params.outdir}/minimap2/align/fungi" },
            mode: params.publish_dir_mode,
            pattern: "*.bam"
        ]
    }

    withName: SEQKIT_GREP_NON_EUKARYOTIC_VIRAL {
        ext.args = '-v'
        ext.prefix = { "${meta.id}_filtered" }
        publishDir = [
            path: { "${params.outdir}/seqkit/grep/${meta.id}_non_eukaryotic_viral" },
            mode: params.publish_dir_mode
        ]
    }

    withName: SEQKIT_GREP_EUKARYOTIC_VIRAL {
        ext.prefix = { "${meta.id}_filtered" }
        publishDir = [
            path: { "${params.outdir}/seqkit/grep/${meta.id}_eukaryotic_viral" },
            mode: params.publish_dir_mode
        ]
    }

    withName: SAMTOOLS_FASTQ {
        ext.prefix = { "${meta.id}.unmapped" }
         publishDir = [
                path: { "${params.outdir}/samtools/fastq/eukaryotic_viral" },
                mode: params.publish_dir_mode,
            ]
        }

    withName: SAMTOOLS_FASTQ_MAPPED {
        ext.prefix = { "${meta.id}.mapped" }
         publishDir = [
                path: { "${params.outdir}/samtools/fastq/eukaryotic_viral" },
                mode: params.publish_dir_mode,
            ]
        }


    withName: SAMTOOLS_FASTQ_FUNGI {
        ext.prefix = { "${meta.id}.unmapped" }
         publishDir = [
                path: { "${params.outdir}/samtools/fastq/fungi" },
                mode: params.publish_dir_mode,
            ]
        }

    withName: SAMTOOLS_FASTQ_FUNGI_MAPPED {
        ext.prefix = { "${meta.id}.mapped" }
         publishDir = [
                path: { "${params.outdir}/samtools/fastq/fungi" },
                mode: params.publish_dir_mode,
            ]
        }

    withName: SAMTOOLS_VIEW_FUNGI {
        ext.args = '-f 4'
        ext.prefix = { "${meta.id}.unmapped" }
         publishDir = [
                path: { "${params.outdir}/samtools/fungi_unmapped" },
                mode: params.publish_dir_mode,
            ]
    }

    withName: SAMTOOLS_VIEW_FUNGI_MAPPED {
        ext.args = '-F 4'
        ext.prefix = { "${meta.id}.mapped" }
         publishDir = [
                path: { "${params.outdir}/samtools/fungi_mapped" },
                mode: params.publish_dir_mode,
            ]
    }


    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
